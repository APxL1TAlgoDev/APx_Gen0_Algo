-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mergeClusters is
port (
    ap_ready : OUT STD_LOGIC;
    ieta1 : IN STD_LOGIC_VECTOR (2 downto 0);
    iphi1 : IN STD_LOGIC_VECTOR (3 downto 0);
    icet1 : IN STD_LOGIC_VECTOR (15 downto 0);
    ieta2 : IN STD_LOGIC_VECTOR (2 downto 0);
    iphi2 : IN STD_LOGIC_VECTOR (15 downto 0);
    icet2 : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of mergeClusters is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal iphi1_cast1_fu_68_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_90_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_96_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_84_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_s_fu_102_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_tmp_s_fu_110_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ieta1_cast1_fu_80_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal iphi1_cast_fu_76_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal cet1_write_assign_fu_118_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ieta2_cast2_fu_72_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal cet2_write_assign_fu_126_p3 : STD_LOGIC_VECTOR (15 downto 0);


begin



    ap_ready <= ap_const_logic_1;
    ap_return_0 <= ieta1_cast1_fu_80_p1;
    ap_return_1 <= iphi1_cast_fu_76_p1;
    ap_return_2 <= cet1_write_assign_fu_118_p3;
    ap_return_3 <= ieta2_cast2_fu_72_p1;
    ap_return_4 <= iphi2;
    ap_return_5 <= cet2_write_assign_fu_126_p3;
    cet1_write_assign_fu_118_p3 <= 
        tmp_14_s_fu_102_p3 when (tmp_fu_84_p2(0) = '1') else 
        icet1;
    cet2_write_assign_fu_126_p3 <= 
        p_tmp_s_fu_110_p3 when (tmp_fu_84_p2(0) = '1') else 
        icet2;
    ieta1_cast1_fu_80_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ieta1),16));
    ieta2_cast2_fu_72_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ieta2),16));
        iphi1_cast1_fu_68_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(iphi1),5));

    iphi1_cast_fu_76_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(iphi1_cast1_fu_68_p1),16));
    p_tmp_s_fu_110_p3 <= 
        ap_const_lv16_0 when (tmp_s_fu_90_p2(0) = '1') else 
        tmp_2_fu_96_p2;
    tmp_14_s_fu_102_p3 <= 
        tmp_2_fu_96_p2 when (tmp_s_fu_90_p2(0) = '1') else 
        ap_const_lv16_0;
    tmp_2_fu_96_p2 <= std_logic_vector(unsigned(icet1) + unsigned(icet2));
    tmp_fu_84_p2 <= "1" when (ieta1 = ieta2) else "0";
    tmp_s_fu_90_p2 <= "1" when (unsigned(icet1) > unsigned(icet2)) else "0";
end behav;
