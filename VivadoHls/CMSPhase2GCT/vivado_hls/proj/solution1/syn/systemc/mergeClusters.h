// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _mergeClusters_HH_
#define _mergeClusters_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct mergeClusters : public sc_module {
    // Port declarations 13
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<3> > ieta1;
    sc_in< sc_lv<4> > iphi1;
    sc_in< sc_lv<16> > icet1;
    sc_in< sc_lv<3> > ieta2;
    sc_in< sc_lv<16> > iphi2;
    sc_in< sc_lv<16> > icet2;
    sc_out< sc_lv<16> > ap_return_0;
    sc_out< sc_lv<16> > ap_return_1;
    sc_out< sc_lv<16> > ap_return_2;
    sc_out< sc_lv<16> > ap_return_3;
    sc_out< sc_lv<16> > ap_return_4;
    sc_out< sc_lv<16> > ap_return_5;


    // Module declarations
    mergeClusters(sc_module_name name);
    SC_HAS_PROCESS(mergeClusters);

    ~mergeClusters();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<5> > iphi1_cast1_fu_68_p1;
    sc_signal< sc_lv<1> > tmp_s_fu_90_p2;
    sc_signal< sc_lv<16> > tmp_2_fu_96_p2;
    sc_signal< sc_lv<1> > tmp_fu_84_p2;
    sc_signal< sc_lv<16> > tmp_14_s_fu_102_p3;
    sc_signal< sc_lv<16> > p_tmp_s_fu_110_p3;
    sc_signal< sc_lv<16> > ieta1_cast1_fu_80_p1;
    sc_signal< sc_lv<16> > iphi1_cast_fu_76_p1;
    sc_signal< sc_lv<16> > cet1_write_assign_fu_118_p3;
    sc_signal< sc_lv<16> > ieta2_cast2_fu_72_p1;
    sc_signal< sc_lv<16> > cet2_write_assign_fu_126_p3;
    static const sc_logic ap_const_logic_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_2();
    void thread_ap_return_3();
    void thread_ap_return_4();
    void thread_ap_return_5();
    void thread_cet1_write_assign_fu_118_p3();
    void thread_cet2_write_assign_fu_126_p3();
    void thread_ieta1_cast1_fu_80_p1();
    void thread_ieta2_cast2_fu_72_p1();
    void thread_iphi1_cast1_fu_68_p1();
    void thread_iphi1_cast_fu_76_p1();
    void thread_p_tmp_s_fu_110_p3();
    void thread_tmp_14_s_fu_102_p3();
    void thread_tmp_2_fu_96_p2();
    void thread_tmp_fu_84_p2();
    void thread_tmp_s_fu_90_p2();
};

}

using namespace ap_rtl;

#endif
