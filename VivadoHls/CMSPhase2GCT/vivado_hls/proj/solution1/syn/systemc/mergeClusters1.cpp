// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "mergeClusters1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic mergeClusters1::ap_const_logic_1 = sc_dt::Log_1;
const bool mergeClusters1::ap_const_boolean_1 = true;
const sc_lv<16> mergeClusters1::ap_const_lv16_0 = "0000000000000000";
const sc_lv<1> mergeClusters1::ap_const_lv1_1 = "1";
const sc_logic mergeClusters1::ap_const_logic_0 = sc_dt::Log_0;

mergeClusters1::mergeClusters1(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_ready);

    SC_METHOD(thread_ap_return_0);
    sensitive << ( ieta2_cast_fu_62_p1 );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( iphi2_cast2_fu_58_p1 );

    SC_METHOD(thread_ap_return_2);
    sensitive << ( cet2_write_assign_fu_92_p3 );

    SC_METHOD(thread_cet2_write_assign_fu_92_p3);
    sensitive << ( icet2 );
    sensitive << ( tmp_fu_66_p2 );
    sensitive << ( p_tmp_s_fu_84_p3 );

    SC_METHOD(thread_ieta2_cast_fu_62_p1);
    sensitive << ( ieta2 );

    SC_METHOD(thread_iphi2_cast2_fu_58_p1);
    sensitive << ( iphi2 );

    SC_METHOD(thread_p_tmp_s_fu_84_p3);
    sensitive << ( tmp_s_fu_72_p2 );
    sensitive << ( tmp_1_fu_78_p2 );

    SC_METHOD(thread_tmp_1_fu_78_p2);
    sensitive << ( icet1 );
    sensitive << ( icet2 );

    SC_METHOD(thread_tmp_fu_66_p2);
    sensitive << ( iphi1 );
    sensitive << ( iphi2 );

    SC_METHOD(thread_tmp_s_fu_72_p2);
    sensitive << ( icet1 );
    sensitive << ( icet2 );
    sensitive << ( tmp_fu_66_p2 );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "mergeClusters1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, iphi1, "(port)iphi1");
    sc_trace(mVcdFile, icet1, "(port)icet1");
    sc_trace(mVcdFile, ieta2, "(port)ieta2");
    sc_trace(mVcdFile, iphi2, "(port)iphi2");
    sc_trace(mVcdFile, icet2, "(port)icet2");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
    sc_trace(mVcdFile, ap_return_2, "(port)ap_return_2");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, tmp_s_fu_72_p2, "tmp_s_fu_72_p2");
    sc_trace(mVcdFile, tmp_1_fu_78_p2, "tmp_1_fu_78_p2");
    sc_trace(mVcdFile, tmp_fu_66_p2, "tmp_fu_66_p2");
    sc_trace(mVcdFile, p_tmp_s_fu_84_p3, "p_tmp_s_fu_84_p3");
    sc_trace(mVcdFile, ieta2_cast_fu_62_p1, "ieta2_cast_fu_62_p1");
    sc_trace(mVcdFile, iphi2_cast2_fu_58_p1, "iphi2_cast2_fu_58_p1");
    sc_trace(mVcdFile, cet2_write_assign_fu_92_p3, "cet2_write_assign_fu_92_p3");
#endif

    }
}

mergeClusters1::~mergeClusters1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void mergeClusters1::thread_ap_ready() {
    ap_ready = ap_const_logic_1;
}

void mergeClusters1::thread_ap_return_0() {
    ap_return_0 = ieta2_cast_fu_62_p1.read();
}

void mergeClusters1::thread_ap_return_1() {
    ap_return_1 = iphi2_cast2_fu_58_p1.read();
}

void mergeClusters1::thread_ap_return_2() {
    ap_return_2 = cet2_write_assign_fu_92_p3.read();
}

void mergeClusters1::thread_cet2_write_assign_fu_92_p3() {
    cet2_write_assign_fu_92_p3 = (!tmp_fu_66_p2.read()[0].is_01())? sc_lv<16>(): ((tmp_fu_66_p2.read()[0].to_bool())? p_tmp_s_fu_84_p3.read(): icet2.read());
}

void mergeClusters1::thread_ieta2_cast_fu_62_p1() {
    ieta2_cast_fu_62_p1 = esl_zext<16,3>(ieta2.read());
}

void mergeClusters1::thread_iphi2_cast2_fu_58_p1() {
    iphi2_cast2_fu_58_p1 = esl_zext<16,3>(iphi2.read());
}

void mergeClusters1::thread_p_tmp_s_fu_84_p3() {
    p_tmp_s_fu_84_p3 = (!tmp_s_fu_72_p2.read()[0].is_01())? sc_lv<16>(): ((tmp_s_fu_72_p2.read()[0].to_bool())? ap_const_lv16_0: tmp_1_fu_78_p2.read());
}

void mergeClusters1::thread_tmp_1_fu_78_p2() {
    tmp_1_fu_78_p2 = (!icet2.read().is_01() || !icet1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(icet2.read()) + sc_biguint<16>(icet1.read()));
}

void mergeClusters1::thread_tmp_fu_66_p2() {
    tmp_fu_66_p2 = (!iphi1.read().is_01() || !iphi2.read().is_01())? sc_lv<1>(): sc_lv<1>(iphi1.read() == iphi2.read());
}

void mergeClusters1::thread_tmp_s_fu_72_p2() {
    tmp_s_fu_72_p2 = (!icet1.read().is_01() || !icet2.read().is_01())? sc_lv<1>(): (sc_biguint<16>(icet1.read()) > sc_biguint<16>(icet2.read()));
}

}

